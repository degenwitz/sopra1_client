{"ast":null,"code":"import _regeneratorRuntime from \"/home/dimi/Documents/Informatik Studium/SoPra/sopra1_client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dimi/Documents/Informatik Studium/SoPra/sopra1_client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/dimi/Documents/Informatik Studium/SoPra/sopra1_client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/dimi/Documents/Informatik Studium/SoPra/sopra1_client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dimi/Documents/Informatik Studium/SoPra/sopra1_client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dimi/Documents/Informatik Studium/SoPra/sopra1_client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dimi/Documents/Informatik Studium/SoPra/sopra1_client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dimi/Documents/Informatik Studium/SoPra/sopra1_client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/dimi/Documents/Informatik Studium/SoPra/sopra1_client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/dimi/Documents/Informatik Studium/SoPra/sopra1_client/src/components/PlayerPage/PlayerPageEdit.js\";\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-left: auto;\\n  margin-right: 10px;\\n  font-weight: bold;\\n\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-left: auto;\\n  margin-right: 10px;\\n  font-weight: bold;\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-left: auto;\\n  margin-right: 10px;\\n  font-weight: bold;\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-left: auto;\\n  margin-right: 10px;\\n  font-weight: bold;\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  font-weight: lighter;\\n  margin-left: 5px;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 6px 0;\\n  width: 280px;\\n  padding: 10px;\\n  border-radius: 6px;\\n  display: flex;\\n  align-items: center;\\n  border: 1px solid #ffffff26;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  margin-top: 20px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  color: white;\\n  margin-bottom: 10px;\\n  text-transform: uppercase;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  &::placeholder {\\n    color: rgba(255, 255, 255, 0.2);\\n  }\\n  height: 35px;\\n  padding-left: 15px;\\n  margin-left: -4px;\\n  border: none;\\n  border-radius: 20px;\\n  margin-bottom: 20px;\\n  background: rgba(255, 255, 255, 0.2);\\n  color: white;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  width: 60%;\\n  height: 375px;\\n  font-size: 16px;\\n  font-weight: 300;\\n  padding-left: 37px;\\n  padding-right: 37px;\\n  border-radius: 5px;\\n  background: linear-gradient(rgb(27, 124, 186), rgb(2, 46, 101));\\n  transition: opacity 0.5s ease, transform 0.5s ease;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-top: 2em;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  min-height: 300px;\\n  justify-content: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { BaseContainer } from \"../../helpers/layout\";\nimport { getDomain } from \"../../helpers/getDomain\";\nimport User from \"../shared/models/User\";\nimport { withRouter } from \"react-router-dom\";\nimport { Button } from \"../../views/design/Button\";\nimport { ErrorCode } from \"../shared/ErrorHandler/ErrorHandler\";\nimport Player from \"../../views/Player\";\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n  return [year, month, day].join('-');\n}\n\nvar FormContainer = styled.div(_templateObject());\nvar Form = styled.div(_templateObject2());\nvar InputField = styled.input(_templateObject3());\nvar Label = styled.label(_templateObject4());\nvar ButtonContainer = styled.div(_templateObject5());\nvar Container = styled.div(_templateObject6());\nvar UserName = styled.div(_templateObject7());\nvar Id = styled.div(_templateObject8());\nvar Status = styled.div(_templateObject9());\nvar Birthday = styled.div(_templateObject10());\nvar CreationDate = styled.div(_templateObject11());\n/**\n * Classes in React allow you to have an internal state within the class and to have the React life-cycle for your component.\n * You should have a class (instead of a functional component) when:\n * - You need an internal state that cannot be achieved via props from other parent components\n * - You fetch data from the server (e.g., in componentDidMount())\n * - You want to access the DOM via Refs\n * https://reactjs.org/docs/react-component.html\n * @Class\n */\n\nvar PlayerPageEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlayerPageEdit, _React$Component);\n\n  /**\n   * If you don’t initialize the state and you don’t bind methods, you don’t need to implement a constructor for your React component.\n   * The constructor for a React component is called before it is mounted (rendered).\n   * In this case the initial state is defined in the constructor. The state is a JS object containing two fields: name and username\n   * These fields are then handled in the onChange() methods in the resp. InputFields\n   */\n  function PlayerPageEdit() {\n    var _this;\n\n    _classCallCheck(this, PlayerPageEdit);\n\n    var us = new User({\n      \"username\": \"Loading\",\n      \"birthday\": 0,\n      \"status\": \"Loading\"\n    });\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlayerPageEdit).call(this));\n    _this.state = {\n      username: null,\n      birthday: null,\n      user: us\n    };\n    return _this;\n  }\n\n  _createClass(PlayerPageEdit, [{\n    key: \"backTomain\",\n    value: function backTomain() {\n      localStorage.removeItem(\"lookingAtUser\");\n      this.props.history.push(\"/game\");\n    }\n  }, {\n    key: \"edit\",\n    value: function edit() {\n      var _this2 = this;\n\n      var change;\n      var bdy;\n\n      if (this.state.birthday == null) {\n        bdy = JSON.stringify({\n          username: this.state.username,\n          birthday: this.state.user.birthday\n        });\n      } else if (this.state.username == null) {\n        var date = new Date(this.state.birthday);\n        var strDate = \"\";\n\n        if (isNan(date)) {\n          alert(\"invalid Date format, please use YYYY-MM-DD\");\n          return;\n        } else {\n          strDate = formatDate(date);\n        }\n\n        bdy = JSON.stringify({\n          username: this.state.user.username,\n          birthday: strDate\n        });\n      } else {\n        var date = new Date(this.state.birthday);\n        var strDate = \"\";\n\n        if (isNan(date.getTime())) {\n          alert(\"invalid Date format, please use YYYY-MM-DD\");\n          return;\n        } else {\n          strDate = formatDate(date);\n        }\n\n        bdy = JSON.stringify({\n          username: this.state.username,\n          birthday: strDate\n        });\n      }\n\n      var id = localStorage.getItem(\"atID\");\n      alert(bdy);\n      fetch(\"\".concat(getDomain(), \"/users/\") + id, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: bdy\n      }).then(function (response) {\n        if (response.status < 200 || response.status >= 300) {\n          throw new Error(ErrorCode(response.status));\n        } //\"return response.json() })\n        //\".then(returnedUser => {\n\n\n        _this2.props.history.push(\"/PlayerPage/\" + localStorage.getItem(\"id\"));\n      }).catch(function (err) {\n        if (err.message.match(/Failed to fetch/)) {\n          alert(\"The server cannot be reached. Did you start it?\");\n        } else if (err.message.match(/unauthorized/)) {\n          //wrong password, do as soon as you know how to\n          alert('wrong username or password');\n\n          _this2.props.history.push('/login');\n        } else if (err.message.match(/not_found/)) {\n          alert(\"id not-found\");\n        } else {\n          alert(\"Something went wrong during the login: \".concat(err.message));\n        }\n      });\n    }\n    /**\n     *  Every time the user enters something in the input field, the state gets updated.\n     * @param key (the key of the state for identifying the field that needs to be updated)\n     * @param value (the value that gets assigned to the identified state key)\n     */\n\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(key, value) {\n      // Example: if the key is username, this statement is the equivalent to the following one:\n      // this.setState({'username': value});\n      this.setState(_defineProperty({}, key, value));\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this3 = this;\n\n      var id = localStorage.getItem(\"atID\");\n      fetch(\"\".concat(getDomain(), \"/users/\") + id, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (response) {\n        if (response.status !== 200) {\n          throw new Error(ErrorCode(response.status));\n        }\n\n        return response.json();\n      }).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(returnedUser) {\n          var user;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return new Promise(function (resolve) {\n                    return setTimeout(resolve, 800);\n                  });\n\n                case 2:\n                  user = new User(returnedUser);\n\n                  _this3.setState({\n                    \"user\": user\n                  }); // store the token into the local storage\n\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (err) {\n        console.log(err);\n        alert(\"Something went wrong fetching the users: \" + err);\n      });\n    }\n    /**\n     * componentDidMount() is invoked immediately after a component is mounted (inserted into the tree).\n     * Initialization that requires DOM nodes should go here.\n     * If you need to load data from a remote endpoint, this is a good place to instantiate the network request.\n     * You may call setState() immediately in componentDidMount().\n     * It will trigger an extra rendering, but it will happen before the browser updates the screen.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var us = new User({\n        \"username\": \"hans\",\n        \"id\": -1,\n        \"status\": \"OFFLINE\"\n      });\n      return React.createElement(BaseContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(FormContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"Edit\", React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(UserName, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"User:\", React.createElement(InputField, {\n        placeholder: this.state.user.username,\n        onChange: function onChange(e) {\n          _this4.handleInputChange(\"username\", e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      })), React.createElement(Birthday, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"Birthday:\", React.createElement(InputField, {\n        placeholder: this.state.user.birthday,\n        onChange: function onChange(e) {\n          _this4.handleInputChange(\"birthday\", e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      })), React.createElement(Id, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"Id: \", this.state.user.id), React.createElement(CreationDate, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \"CreationDate: \", this.state.user.creationDate, \" \"), React.createElement(Status, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"Status: \", this.state.user.status))), React.createElement(ButtonContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(Button, {\n        width: \"50%\",\n        onClick: function onClick() {\n          _this4.backTomain();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"Return to main Page\"), React.createElement(Button, {\n        disabled: !this.state.username && !this.state.birthday,\n        width: \"50%\",\n        onClick: function onClick() {\n          _this4.edit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \"save changes\"))));\n    }\n  }]);\n\n  return PlayerPageEdit;\n}(React.Component);\n/**\n * You can get access to the history object's properties via the withRouter.\n * withRouter will pass updated match, location, and history props to the wrapped component whenever it renders.\n */\n\n\nexport default withRouter(PlayerPageEdit);\n/**\n <Player user ={ this.state.user} />\n <Player user ={ this.state.user} />\n <UserName>User: {this.state.user.username}</UserName>\n <Id>Id: {this.state.user.id}</Id>\n\n\n\n */","map":{"version":3,"sources":["/home/dimi/Documents/Informatik Studium/SoPra/sopra1_client/src/components/PlayerPage/PlayerPageEdit.js"],"names":["React","styled","BaseContainer","getDomain","User","withRouter","Button","ErrorCode","Player","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","FormContainer","div","Form","InputField","input","Label","label","ButtonContainer","Container","UserName","Id","Status","Birthday","CreationDate","PlayerPageEdit","us","state","username","birthday","user","localStorage","removeItem","props","history","push","change","bdy","JSON","stringify","strDate","isNan","alert","getTime","id","getItem","fetch","method","headers","body","then","response","status","Error","catch","err","message","match","key","value","setState","json","returnedUser","Promise","resolve","setTimeout","console","log","e","handleInputChange","target","creationDate","backTomain","edit","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { BaseContainer } from \"../../helpers/layout\";\nimport { getDomain } from \"../../helpers/getDomain\";\nimport User from \"../shared/models/User\";\nimport { withRouter } from \"react-router-dom\";\nimport { Button } from \"../../views/design/Button\";\nimport {ErrorCode} from \"../shared/ErrorHandler/ErrorHandler\"\nimport Player from \"../../views/Player\";\n\nfunction formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nconst FormContainer = styled.div`\n  margin-top: 2em;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 300px;\n  justify-content: center;\n`;\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 60%;\n  height: 375px;\n  font-size: 16px;\n  font-weight: 300;\n  padding-left: 37px;\n  padding-right: 37px;\n  border-radius: 5px;\n  background: linear-gradient(rgb(27, 124, 186), rgb(2, 46, 101));\n  transition: opacity 0.5s ease, transform 0.5s ease;\n`;\n\nconst InputField = styled.input`\n  &::placeholder {\n    color: rgba(255, 255, 255, 0.2);\n  }\n  height: 35px;\n  padding-left: 15px;\n  margin-left: -4px;\n  border: none;\n  border-radius: 20px;\n  margin-bottom: 20px;\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n`;\n\nconst Label = styled.label`\n  color: white;\n  margin-bottom: 10px;\n  text-transform: uppercase;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`;\n\nconst Container = styled.div`\n  margin: 6px 0;\n  width: 280px;\n  padding: 10px;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  border: 1px solid #ffffff26;\n`;\n\nconst UserName = styled.div`\n  font-weight: lighter;\n  margin-left: 5px;\n`;\n\nconst Id = styled.div`\n  margin-left: auto;\n  margin-right: 10px;\n  font-weight: bold;\n`;\n\nconst Status = styled.div`\n  margin-left: auto;\n  margin-right: 10px;\n  font-weight: bold;\n`;\n\nconst Birthday = styled.div`\n  margin-left: auto;\n  margin-right: 10px;\n  font-weight: bold;\n`;\n\nconst CreationDate = styled.div`\n  margin-left: auto;\n  margin-right: 10px;\n  font-weight: bold;\n`;\n\n\n\n/**\n * Classes in React allow you to have an internal state within the class and to have the React life-cycle for your component.\n * You should have a class (instead of a functional component) when:\n * - You need an internal state that cannot be achieved via props from other parent components\n * - You fetch data from the server (e.g., in componentDidMount())\n * - You want to access the DOM via Refs\n * https://reactjs.org/docs/react-component.html\n * @Class\n */\nclass PlayerPageEdit extends React.Component {\n\n    /**\n     * If you don’t initialize the state and you don’t bind methods, you don’t need to implement a constructor for your React component.\n     * The constructor for a React component is called before it is mounted (rendered).\n     * In this case the initial state is defined in the constructor. The state is a JS object containing two fields: name and username\n     * These fields are then handled in the onChange() methods in the resp. InputFields\n     */\n    constructor() { var us = new User( {\n        \"username\" : \"Loading\",\n        \"birthday\": 0,\n        \"status\": \"Loading\"\n    } );\n        super();\n        this.state = {\n            username: null,\n            birthday: null,\n            user: us\n        };\n    }\n\n    backTomain(){\n        localStorage.removeItem(\"lookingAtUser\");\n        this.props.history.push(`/game`);\n    }\n\n    edit(){\n        var change;\n        var bdy;\n\n        if( this.state.birthday == null){\n            bdy = JSON.stringify({\n               username: this.state.username,\n                birthday: this.state.user.birthday\n            });\n        }\n        else if(this.state.username == null ){\n            var date  = new Date(this.state.birthday);\n            var strDate = \"\";\n            if(isNan(date)){\n                alert(\"invalid Date format, please use YYYY-MM-DD\");\n                return;\n            } else{\n                strDate = formatDate(date);\n            }\n            bdy = JSON.stringify({\n                username: this.state.user.username,\n                birthday: strDate\n            });\n        }\n        else{\n            var date  = new Date(this.state.birthday);\n            var strDate = \"\";\n            if(isNan(date.getTime() )){\n                alert(\"invalid Date format, please use YYYY-MM-DD\");\n                return;\n            } else{\n                strDate = formatDate(date);\n            }\n            bdy = JSON.stringify({\n                username: this.state.username,\n                birthday: strDate\n            });\n\n        }\n        var id = localStorage.getItem(\"atID\");\n        alert(bdy)\n\n        fetch(`${getDomain()}/users/`+id, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: bdy\n        }).then(response => {\n            if( response.status < 200 || response.status >= 300 ) {\n                throw new Error( ErrorCode(response.status) );\n            }\n            //\"return response.json() })\n            //\".then(returnedUser => {\n                this.props.history.push(`/PlayerPage/`+localStorage.getItem(\"id\"));\n            })\n            .catch(err => {\n                if (err.message.match(/Failed to fetch/)) {\n                    alert(\"The server cannot be reached. Did you start it?\");\n                }  else if (err.message.match( /unauthorized/)) {     //wrong password, do as soon as you know how to\n                    alert( 'wrong username or password');\n                    this.props.history.push( '/login' );\n                } else if(err.message.match(/not_found/)){\n                    alert(\"id not-found\");\n                } else {\n                    alert(`Something went wrong during the login: ${err.message}`);\n                }\n            });\n    }\n    /**\n     *  Every time the user enters something in the input field, the state gets updated.\n     * @param key (the key of the state for identifying the field that needs to be updated)\n     * @param value (the value that gets assigned to the identified state key)\n     */\n    handleInputChange(key, value) {\n        // Example: if the key is username, this statement is the equivalent to the following one:\n        // this.setState({'username': value});\n        this.setState({ [key]: value });\n    }\n\n\n    componentWillMount() {\n        var id = localStorage.getItem(\"atID\");\n        fetch(`${getDomain()}/users/`+id, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => {\n            if( response.status !== 200 ) {\n                throw new Error( ErrorCode(response.status) );\n            }\n            return response.json() })\n            .then(async returnedUser => {\n                await new Promise(resolve => setTimeout(resolve, 800));\n                const user = new User(returnedUser);\n                this.setState({\"user\": user});\n                // store the token into the local storage\n            })\n            .catch(err => {\n                console.log(err);\n                alert(\"Something went wrong fetching the users: \" + err);\n            });\n    }\n    /**\n     * componentDidMount() is invoked immediately after a component is mounted (inserted into the tree).\n     * Initialization that requires DOM nodes should go here.\n     * If you need to load data from a remote endpoint, this is a good place to instantiate the network request.\n     * You may call setState() immediately in componentDidMount().\n     * It will trigger an extra rendering, but it will happen before the browser updates the screen.\n     */\n\n    render() {\n\n        var us = new User( {\n            \"username\" : \"hans\",\n            \"id\": -1,\n            \"status\": \"OFFLINE\"\n        } );\n\n        return (\n            <BaseContainer>\n                <FormContainer>\n                    <Form>\n                        Edit\n                        <Container>\n                            <UserName>\n                                User:\n                                <InputField\n                                    placeholder={this.state.user.username}\n                                    onChange={e => {\n                                        this.handleInputChange(\"username\", e.target.value);\n                                    }}\n                                />\n                            </UserName>\n                            <Birthday>Birthday:\n                                <InputField\n                                    placeholder={this.state.user.birthday}\n                                    onChange={e => {\n                                        this.handleInputChange(\"birthday\", e.target.value);\n                                    }}\n                                />\n                            </Birthday>\n                            <Id>Id: {this.state.user.id}</Id>\n                            <CreationDate>CreationDate: {this.state.user.creationDate} </CreationDate>\n                            <Status>Status: {this.state.user.status}</Status>\n\n                        </Container>\n                    </Form>\n                    <ButtonContainer>\n                        <Button\n                            width=\"50%\"\n                            onClick={() => {\n                                this.backTomain();\n                            }}\n                        >\n                            Return to main Page\n                        </Button>\n                        <Button\n                            disabled={!this.state.username && !this.state.birthday}\n                            width=\"50%\"\n                            onClick={() => {\n                                this.edit();\n                            }}\n                        >\n                            save changes\n                        </Button>\n                    </ButtonContainer>\n                </FormContainer>\n            </BaseContainer>\n        );\n\n    }\n}\n\n/**\n * You can get access to the history object's properties via the withRouter.\n * withRouter will pass updated match, location, and history props to the wrapped component whenever it renders.\n */\nexport default withRouter(PlayerPageEdit);\n/**\n <Player user ={ this.state.user} />\n <Player user ={ this.state.user} />\n <UserName>User: {this.state.user.username}</UserName>\n <Id>Id: {this.state.user.id}</Id>\n\n\n\n */"]},"metadata":{},"sourceType":"module"}