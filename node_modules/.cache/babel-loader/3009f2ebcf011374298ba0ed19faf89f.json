{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/dimi/Documents/Informatik Studium/SoPra/sopra1_client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/dimi/Documents/Informatik Studium/SoPra/sopra1_client/src/views/Player.js\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-left: auto;\\n  margin-right: 10px;\\n  font-weight: bold;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  font-weight: bold;\\n  color: #06c4ff;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  font-weight: lighter;\\n  margin-left: 5px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 6px 0;\\n  width: 280px;\\n  padding: 10px;\\n  border-radius: 6px;\\n  display: flex;\\n  align-items: center;\\n  border: 1px solid #ffffff26;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"./design/Button\";\nvar Container = styled.div(_templateObject());\nvar UserName = styled.div(_templateObject2());\nvar Name = styled.div(_templateObject3());\nvar Id = styled.div(_templateObject4());\n/**\n * This is an example of a Functional and stateless component (View) in React. Functional components are not classes and thus don't handle internal state changes.\n * Conceptually, components are like JavaScript functions. They accept arbitrary inputs (called “props”) and return React elements describing what should appear on the screen.\n * They are reusable pieces, and think about each piece in isolation.\n * Functional components have to return always something. However, they don't need a \"render()\" method.\n * https://reactjs.org/docs/components-and-props.html\n * @FunctionalComponent\n */\n\nvar Player = function Player(_ref) {\n  var user = _ref.user;\n\n  function handleClick(e) {\n    e.preventDefault();\n    console.log('The link was clicked.');\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#\",\n    onClick: function onClick() {\n      return alert(\"hallo\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(UserName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \" \", user.username)), React.createElement(Name, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, user.name), \" \", React.createElement(UserName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, user.username), React.createElement(Id, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Id: \", user.id));\n};\n\nexport default Player;","map":{"version":3,"sources":["/home/dimi/Documents/Informatik Studium/SoPra/sopra1_client/src/views/Player.js"],"names":["React","styled","Button","Container","div","UserName","Name","Id","Player","user","handleClick","e","preventDefault","console","log","alert","username","name","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AAGA,IAAMC,SAAS,GAAGF,MAAM,CAACG,GAAV,mBAAf;AAUA,IAAMC,QAAQ,GAAGJ,MAAM,CAACG,GAAV,oBAAd;AAKA,IAAME,IAAI,GAAGL,MAAM,CAACG,GAAV,oBAAV;AAKA,IAAMG,EAAE,GAAGN,MAAM,CAACG,GAAV,oBAAR;AAMA;;;;;;;;;AAQA,IAAMI,MAAM,GAAG,SAATA,MAAS,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AACzB,WAASC,WAAT,CAAqBC,CAArB,EAAwB;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACC;;AACH,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,OAAO,EAAE;AAAA,aAAIC,KAAK,CAAC,OAAD,CAAT;AAAA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAYN,IAAI,CAACO,QAAjB,CADJ,CADJ,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOP,IAAI,CAACQ,IAAZ,CAJF,OAI2B,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWR,IAAI,CAACO,QAAhB,CAJ3B,EAKE,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAASP,IAAI,CAACS,EAAd,CALF,CADF;AASD,CAdD;;AAgBA,eAAeV,MAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport {Button} from \"./design/Button\";\n\n\nconst Container = styled.div`\n  margin: 6px 0;\n  width: 280px;\n  padding: 10px;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  border: 1px solid #ffffff26;\n`;\n\nconst UserName = styled.div`\n  font-weight: lighter;\n  margin-left: 5px;\n`;\n\nconst Name = styled.div`\n  font-weight: bold;\n  color: #06c4ff;\n`;\n\nconst Id = styled.div`\n  margin-left: auto;\n  margin-right: 10px;\n  font-weight: bold;\n`;\n\n/**\n * This is an example of a Functional and stateless component (View) in React. Functional components are not classes and thus don't handle internal state changes.\n * Conceptually, components are like JavaScript functions. They accept arbitrary inputs (called “props”) and return React elements describing what should appear on the screen.\n * They are reusable pieces, and think about each piece in isolation.\n * Functional components have to return always something. However, they don't need a \"render()\" method.\n * https://reactjs.org/docs/components-and-props.html\n * @FunctionalComponent\n */\nconst Player = ({ user }) => {\n    function handleClick(e) {\n    e.preventDefault();\n    console.log('The link was clicked.');\n    }\n  return (\n    <Container>\n        <a href=\"#\" onClick={()=>alert(\"hallo\")} >\n            <UserName> {user.username}</UserName>\n        </a>\n      <Name>{user.name}</Name> <UserName>{user.username}</UserName>\n      <Id>Id: {user.id}</Id>\n    </Container>\n  );\n};\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}